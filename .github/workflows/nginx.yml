name: Nginx - dockerize web-server
run-name: Nginx-${{ github.sha }}
on:
  push:
    paths:
      - 'nginx/**'
  pull_request:
    paths:
      - 'nginx/**'
  workflow_dispatch: 
    inputs:
      logLevel:
        description: 'Log level'
        required: true
        default: 'warning'
        type: choice
        options:
        - info
        - warning
        - debug
      chosen-os:
        required: true
        type: choice
        options:
        - ubuntu-latest
        - ubuntu-20.04
        - self-hosted

jobs:
  build:
    runs-on: "${{ inputs.chosen-os || 'ubuntu-latest' }}"

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v3
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: us-east-1

    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1

    - name: Build image
      env:
        ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        ECR_REPOSITORY: nginx
        IMAGE_TAG: nginx_devops
      run: |
        docker build -f nginx/Dockerfile.nginx -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG ./nginx
    
    - name: Push image to Amazon ECR
      env:
        ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        ECR_REPOSITORY: nginx
        IMAGE_TAG: nginx_devops_${{ github.sha }}
      run: |
        docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG