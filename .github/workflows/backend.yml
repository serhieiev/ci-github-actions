name: Backend - lint, test, dockerize python BE

on:
  push:
    paths:
      - 'app/**'
  pull_request:
    paths:
      - 'app/**'
  workflow_dispatch: 
    inputs:
      logLevel:
        description: 'Log level'
        required: true
        default: 'warning'
        type: choice
        options:
        - info
        - warning
        - debug
      chosen-os:
        required: true
        type: choice
        options:
        - ubuntu-latest
        - ubuntu-20.04
        - self-hosted

jobs:
  lint-test-build:
    runs-on: "${{ inputs.chosen-os || 'ubuntu-latest' }}"

    strategy:
      matrix:
        python-version: [3.11]

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: ${{matrix.python-version}}

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install flake8 pytest
        pip install -r app/requirements.txt
        pip install -r app/requirements_dev.txt

    - name: Lint with flake8
      run: |
        flake8 app/

    - name: Test with pytest
      run: |
        pytest app/tests/

    - name: Build Docker image
      run: |
        docker build -t be_devops:latest ./app

    - name: Set up AWS CLI
      run: |
        echo "AWS_ACCESS_KEY_ID=${{ secrets.AWS_ACCESS_KEY_ID }}" >> $GITHUB_ENV
        echo "AWS_SECRET_ACCESS_KEY=${{ secrets.AWS_SECRET_ACCESS_KEY }}" >> $GITHUB_ENV
        echo "AWS_REGION=${{ secrets.AWS_REGION }}" >> $GITHUB_ENV

    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1
  
    - name: Push Docker image to ECR
      run: |
        docker tag be_devops:latest ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com/${{secrets.AWS_ECR_BE}}:latest
        docker push ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com/${{secrets.AWS_ECR_BE}}:latest
